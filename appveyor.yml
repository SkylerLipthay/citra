# it seems that Qt is only installed by default on unstable os at the moment
os: unstable

# shallow clone
clone_depth: 5

environment:
  QTDIR: C:\Qt\5.4\msvc2013_64_opengl
  BUILD_PASSWORD:
    secure: <to be determined>

platform:
  - x64

configuration:
  - Release

install:
  - git submodule update --init --recursive --depth 20

before_build:
  - mkdir build
  - cd build
  - cmake -G "Visual Studio 12 Win64" ..
  - cd ..

after_build:
    # copy the qt dlls
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\icudt53.dll build\bin\release
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\icuin53.dll build\bin\release
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\icuuc53.dll build\bin\release
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\Qt5Core.dll build\bin\release
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\Qt5Gui.dll  build\bin\release
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\Qt5OpenGL.dll build\bin\release
  - copy C:\Qt\5.4\msvc2013_64_opengl\bin\Qt5Widgets.dll  build\bin\release
  - mkdir build\bin\release\platforms\
  - copy C:\Qt\5.4\msvc2013_64_opengl\plugins\platforms\qwindows.dll build\bin\release\platforms
  
  - ps: >
        if (!"$env:APPVEYOR_PULL_REQUEST_TITLE" -and ("$env:APPVEYOR_REPO_BRANCH" -eq "master"))
          {
            $BUILD_NAME_UNCUT = git show -s --pretty=format:%h-%f.7z | Out-String
            $BUILD_NAME = $BUILD_NAME_UNCUT.Substring(0, [System.Math]::Min(111, $BUILD_NAME_UNCUT.Length)) -replace "`n|`r",""
            # zip up the build folder
            7z a $BUILD_NAME .\build\bin\release\*
            
            # download winscp
            Invoke-WebRequest "http://hivelocity.dl.sourceforge.net/project/winscp/WinSCP/5.7/winscp570.zip" -OutFile "winscp570.zip"
            7z e -y winscp570.zip
            
            # upload to server
            .\WinSCP.com /command "option batch abort" "option confirm off" "open sftp://builds:${env:BUILD_PASSWORD}@builds.citra-emu.org -hostkey=*" "put $BUILD_NAME /citra/nightly/windows/" "exit"
          }
